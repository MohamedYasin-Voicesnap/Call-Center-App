{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { fetchCallDetails as apiFetchCallDetails, handleUpdateCall as apiHandleUpdateCall } from '../utils/api';\nexport default function useCalls() {\n  _s();\n  const [callDetails, setCallDetails] = useState([]);\n  const [editingCallId, setEditingCallId] = useState(null);\n  const [editInputs, setEditInputs] = useState({\n    remarks: '',\n    name: '',\n    remarks_status: '',\n    recordings: '',\n    alternative_numbers: ''\n  });\n  const [editLoading, setEditLoading] = useState(false);\n  const fetchCallDetails = async (authToken, from = '', to = '') => {\n    const calls = await apiFetchCallDetails(authToken, from, to);\n    setCallDetails(calls);\n  };\n  const handleEditCall = call => {\n    setEditingCallId(call.id);\n    setEditInputs({\n      remarks: '',\n      name: '',\n      remarks_status: '',\n      recordings: '',\n      alternative_numbers: ''\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditingCallId(null);\n    setEditInputs({\n      remarks: '',\n      name: '',\n      remarks_status: '',\n      recordings: '',\n      alternative_numbers: ''\n    });\n  };\n  const handleUpdateCall = async (callId, token) => {\n    setEditLoading(true);\n    const result = await apiHandleUpdateCall(callId, editInputs, token);\n    if (result.success) {\n      await fetchCallDetails(token);\n      setEditingCallId(null);\n      setEditInputs({\n        remarks: '',\n        name: '',\n        remarks_status: '',\n        recordings: '',\n        alternative_numbers: ''\n      });\n    }\n    setEditLoading(false);\n  };\n  return {\n    callDetails,\n    setCallDetails,\n    fetchCallDetails,\n    editingCallId,\n    setEditingCallId,\n    editInputs,\n    setEditInputs,\n    editLoading,\n    setEditLoading,\n    handleEditCall,\n    handleCancelEdit,\n    handleUpdateCall\n  };\n}\n_s(useCalls, \"TF3v/Jg6//VNISyDz1VLK6jc1Fs=\");","map":{"version":3,"names":["useState","fetchCallDetails","apiFetchCallDetails","handleUpdateCall","apiHandleUpdateCall","useCalls","_s","callDetails","setCallDetails","editingCallId","setEditingCallId","editInputs","setEditInputs","remarks","name","remarks_status","recordings","alternative_numbers","editLoading","setEditLoading","authToken","from","to","calls","handleEditCall","call","id","handleCancelEdit","callId","token","result","success"],"sources":["D:/Projects/Asterisk Frontend M/Asterisk Frontend M/frontend/src/hooks/useCalls.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { fetchCallDetails as apiFetchCallDetails, handleUpdateCall as apiHandleUpdateCall } from '../utils/api';\r\n\r\nexport default function useCalls() {\r\n  const [callDetails, setCallDetails] = useState([]);\r\n  const [editingCallId, setEditingCallId] = useState(null);\r\n  const [editInputs, setEditInputs] = useState({ remarks: '', name: '', remarks_status: '', recordings: '', alternative_numbers: '' });\r\n  const [editLoading, setEditLoading] = useState(false);\r\n\r\n  const fetchCallDetails = async (authToken, from = '', to = '') => {\r\n    const calls = await apiFetchCallDetails(authToken, from, to);\r\n    setCallDetails(calls);\r\n  };\r\n\r\n  const handleEditCall = (call) => {\r\n    setEditingCallId(call.id);\r\n    setEditInputs({ remarks: '', name: '', remarks_status: '', recordings: '', alternative_numbers: '' });\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingCallId(null);\r\n    setEditInputs({ remarks: '', name: '', remarks_status: '', recordings: '', alternative_numbers: '' });\r\n  };\r\n\r\n  const handleUpdateCall = async (callId, token) => {\r\n    setEditLoading(true);\r\n    const result = await apiHandleUpdateCall(callId, editInputs, token);\r\n    if (result.success) {\r\n      await fetchCallDetails(token);\r\n      setEditingCallId(null);\r\n      setEditInputs({ remarks: '', name: '', remarks_status: '', recordings: '', alternative_numbers: '' });\r\n    }\r\n    setEditLoading(false);\r\n  };\r\n\r\n  return {\r\n    callDetails,\r\n    setCallDetails,\r\n    fetchCallDetails,\r\n    editingCallId,\r\n    setEditingCallId,\r\n    editInputs,\r\n    setEditInputs,\r\n    editLoading,\r\n    setEditLoading,\r\n    handleEditCall,\r\n    handleCancelEdit,\r\n    handleUpdateCall\r\n  };\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,gBAAgB,IAAIC,mBAAmB,EAAEC,gBAAgB,IAAIC,mBAAmB,QAAQ,cAAc;AAE/G,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,cAAc,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,mBAAmB,EAAE;EAAG,CAAC,CAAC;EACpI,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMC,gBAAgB,GAAG,MAAAA,CAAOmB,SAAS,EAAEC,IAAI,GAAG,EAAE,EAAEC,EAAE,GAAG,EAAE,KAAK;IAChE,MAAMC,KAAK,GAAG,MAAMrB,mBAAmB,CAACkB,SAAS,EAAEC,IAAI,EAAEC,EAAE,CAAC;IAC5Dd,cAAc,CAACe,KAAK,CAAC;EACvB,CAAC;EAED,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC/Bf,gBAAgB,CAACe,IAAI,CAACC,EAAE,CAAC;IACzBd,aAAa,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,mBAAmB,EAAE;IAAG,CAAC,CAAC;EACvG,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,gBAAgB,CAAC,IAAI,CAAC;IACtBE,aAAa,CAAC;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,cAAc,EAAE,EAAE;MAAEC,UAAU,EAAE,EAAE;MAAEC,mBAAmB,EAAE;IAAG,CAAC,CAAC;EACvG,CAAC;EAED,MAAMd,gBAAgB,GAAG,MAAAA,CAAOyB,MAAM,EAAEC,KAAK,KAAK;IAChDV,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMW,MAAM,GAAG,MAAM1B,mBAAmB,CAACwB,MAAM,EAAEjB,UAAU,EAAEkB,KAAK,CAAC;IACnE,IAAIC,MAAM,CAACC,OAAO,EAAE;MAClB,MAAM9B,gBAAgB,CAAC4B,KAAK,CAAC;MAC7BnB,gBAAgB,CAAC,IAAI,CAAC;MACtBE,aAAa,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,cAAc,EAAE,EAAE;QAAEC,UAAU,EAAE,EAAE;QAAEC,mBAAmB,EAAE;MAAG,CAAC,CAAC;IACvG;IACAE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACLZ,WAAW;IACXC,cAAc;IACdP,gBAAgB;IAChBQ,aAAa;IACbC,gBAAgB;IAChBC,UAAU;IACVC,aAAa;IACbM,WAAW;IACXC,cAAc;IACdK,cAAc;IACdG,gBAAgB;IAChBxB;EACF,CAAC;AACH;AAACG,EAAA,CA9CuBD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}