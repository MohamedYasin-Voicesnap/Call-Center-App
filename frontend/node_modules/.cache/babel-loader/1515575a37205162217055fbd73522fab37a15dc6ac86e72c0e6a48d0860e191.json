{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Git Clone File\\\\Call-Center-App\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport AddAgentModal from './components/Modals/AddAgentModal';\nimport EditAgentModal from './components/Modals/EditAgentModal';\nimport AltNumbersModal from './components/Modals/AltNumbersModal';\nimport ViewAllCallsModal from './components/Modals/ViewAllCallsModal';\nimport useAuth from './hooks/useAuth';\nimport useAgents from './hooks/useAgents';\nimport useCalls from './hooks/useCalls';\nimport { exportToExcel, exportToPDF, exportToCSV, exportToXML } from './utils/exportHelpers';\nimport { formatDuration, callStatusClass } from './utils/format';\nimport { handleSaveAltNumbers, handleSaveViewAllRemarks, fetchCompanyInfo } from './utils/api';\nimport CompanyBlockedOverlay from './components/CompanyBlockedOverlay';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Auth\n  const {\n    currentScreen,\n    user,\n    loginData,\n    setLoginData,\n    handleLogin,\n    handleLogout,\n    loading,\n    error,\n    setError\n  } = useAuth();\n\n  // Agents\n  const {\n    agentDetails,\n    fetchAgentDetails,\n    handleAddAgent,\n    handleEditAgent,\n    handleDeleteAgent,\n    deleteLoading\n  } = useAgents();\n\n  // Calls\n  const {\n    callDetails,\n    fetchCallDetails,\n    editingCallId,\n    setEditingCallId,\n    editInputs,\n    setEditInputs,\n    editLoading,\n    handleEditCall,\n    handleCancelEdit,\n    handleUpdateCall\n  } = useCalls();\n\n  // UI States\n  const [activeTab, setActiveTab] = useState('calls');\n  const [callSearch, setCallSearch] = useState('');\n  const [agentSearch, setAgentSearch] = useState('');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [showCallExport, setShowCallExport] = useState(false);\n  const [showAgentExport, setShowAgentExport] = useState(false);\n  const [blockedMessage, setBlockedMessage] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [formData, setFormData] = useState({\n    agent_number: '',\n    name: '',\n    email: '',\n    password: '',\n    status: 'Active',\n    is_admin: false\n  });\n  const [manualCallNumber, setManualCallNumber] = useState('');\n  const [viewCustomer, setViewCustomer] = useState(null);\n  const [viewAllRemarksEdit, setViewAllRemarksEdit] = useState(false);\n  const [viewAllRemarksInput, setViewAllRemarksInput] = useState('');\n  const [viewAllRemarksLoading, setViewAllRemarksLoading] = useState(false);\n  const [altModal, setAltModal] = useState(false);\n  const [selectedCall, setSelectedCall] = useState(null);\n  const [altNumbersInput, setAltNumbersInput] = useState('');\n  const [altNumbersLoading, setAltNumbersLoading] = useState(false);\n  const userRoleIsAdmin = user === null || user === void 0 ? void 0 : user.is_admin;\n  const token = localStorage.getItem('token');\n  const handleDateSearch = () => {\n    fetchCallDetails(token, fromDate, toDate);\n  };\n  const refreshCalls = () => {\n    fetchCallDetails(token, fromDate, toDate);\n  };\n  const openEditModal = agent => {\n    setFormData(agent);\n    setShowEditModal(true);\n  };\n  const handleManualCall = () => {\n    if (!manualCallNumber) return alert(\"Enter a number\");\n    alert(`Pretend calling ${manualCallNumber}`);\n  };\n  const handleOpenAltNumbersModal = call => {\n    setSelectedCall(call);\n    setAltNumbersInput(call.alternative_numbers || '');\n    setAltModal(true);\n  };\n  const handleSaveAltNumbersWrapper = async () => {\n    setAltNumbersLoading(true);\n    const res = await handleSaveAltNumbers(selectedCall.id, altNumbersInput, token);\n    if (res.success) {\n      await fetchCallDetails(token, fromDate, toDate);\n      setAltModal(false);\n    }\n    setAltNumbersLoading(false);\n  };\n  const handleViewCustomerCalls = customerNumber => {\n    const customerCalls = filteredCalls.filter(call => call.customer_number === customerNumber);\n    const enrichedCustomer = {\n      number: customerNumber,\n      calls: customerCalls.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)) // latest first\n    };\n    setViewCustomer(enrichedCustomer);\n    setViewAllRemarksEdit(false);\n    setViewAllRemarksInput('');\n  };\n  const handleViewAllRemarksEdit = () => {\n    const remarks = customerMostRecentRemark(viewCustomer);\n    const cleanRemarks = removeTimestampsAndTags('');\n    setViewAllRemarksInput(cleanRemarks);\n    setViewAllRemarksEdit(true);\n  };\n  const removeTimestampsAndTags = text => {\n    return text.replace(/<[^>]*>/g, '') // remove HTML tags\n    .replace(/\\[\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}:\\d{2}\\]/g, '') // remove [DD/MM/YYYY HH:MM:SS]\n    .trim();\n  };\n  const customerMostRecentRemark = customer => {\n    var _customer$calls;\n    const mostRecentCall = customer === null || customer === void 0 ? void 0 : (_customer$calls = customer.calls) === null || _customer$calls === void 0 ? void 0 : _customer$calls[0];\n    return (mostRecentCall === null || mostRecentCall === void 0 ? void 0 : mostRecentCall.remarks) || '';\n  };\n  const handleSaveViewAllRemarksWrapper = async () => {\n    var _viewCustomer$calls, _viewCustomer$calls$;\n    if (!(viewCustomer !== null && viewCustomer !== void 0 && (_viewCustomer$calls = viewCustomer.calls) !== null && _viewCustomer$calls !== void 0 && _viewCustomer$calls[0])) return;\n    setViewAllRemarksLoading(true);\n    const timestamp = new Date().toLocaleString('en-GB'); // dd/mm/yyyy hh:mm:ss\n    const newFormattedRemark = `${viewAllRemarksInput.trim()} <span style='font-size:10px;color:gray;'>[${timestamp}]</span>`;\n    const oldRemarks = ((_viewCustomer$calls$ = viewCustomer.calls[0]) === null || _viewCustomer$calls$ === void 0 ? void 0 : _viewCustomer$calls$.remarks) || '';\n    const updatedRemarks = `${newFormattedRemark}<br/>${oldRemarks}`;\n    const callId = viewCustomer.calls[0].id;\n    const res = await handleSaveViewAllRemarks(callId, {\n      remarks: updatedRemarks\n    }, token);\n    if (res.success) {\n      // ✅ Update locally — so UI shows updated immediately\n      const updatedCalls = viewCustomer.calls.map(call => call.id === callId ? {\n        ...call,\n        remarks: updatedRemarks\n      } : call);\n      setViewCustomer(prev => ({\n        ...prev,\n        calls: updatedCalls\n      }));\n      setViewAllRemarksEdit(false);\n      setViewAllRemarksInput('');\n    }\n    setViewAllRemarksLoading(false);\n  };\n  const tabClass = key => `py-3 px-4 text-sm font-medium border-b-2 ${activeTab === key ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`;\n  useEffect(() => {\n    const init = async () => {\n      if (!user || !token) return;\n      // Route master to companies tab by default\n      if (user.role === 'master') {\n        setActiveTab('companies');\n        return; // no company gating for master\n      }\n      // For admin/agent, fetch company status and gate UI\n      const company = await fetchCompanyInfo(token);\n      if (company && (company.status === 'Fully Close' || company.status === 'Partially Close' || company.payment_status === 'Unpaid')) {\n        const msg = 'Your services are stopped. Please contact the sales person.';\n        setBlockedMessage(msg);\n        console.log('Company is blocked, blockedMessage set to:', msg, 'Company status:', company.status, 'Payment status:', company.payment_status);\n        return; // do not fetch data\n      }\n      setBlockedMessage('');\n      console.log('Company is NOT blocked, blockedMessage set to empty.', 'Company status:', company === null || company === void 0 ? void 0 : company.status, 'Payment status:', company === null || company === void 0 ? void 0 : company.payment_status);\n      fetchCallDetails(token);\n      fetchAgentDetails(token);\n    };\n    init();\n  }, [user]);\n  if (currentScreen === 'login') {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      loginData: loginData,\n      setLoginData: setLoginData,\n      handleLogin: handleLogin,\n      loading: loading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  if (blockedMessage) {\n    return /*#__PURE__*/_jsxDEV(CompanyBlockedOverlay, {\n      message: blockedMessage,\n      onLogout: handleLogout,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n  const filteredCalls = callDetails.filter(call => {\n    const query = (callSearch || '').trim().toLowerCase();\n    if (!query) return true;\n    const hasMeeting = Boolean(call.meeting_datetime || call.meeting_description && call.meeting_description.trim());\n    // If the user searches for 'meeting' (or similar), only show calls that have meeting info\n    if (['meeting', 'meetings', 'meet'].includes(query)) {\n      return hasMeeting;\n    }\n    const fields = [call.customer_number || '', call.agent_number || '', (call.name || '').replace(/<[^>]*>/g, ''), (call.remarks || '').replace(/<[^>]*>/g, ''), call.meeting_description || '', call.meeting_datetime ? new Date(call.meeting_datetime).toLocaleString() : ''];\n    return fields.join(' ').toLowerCase().includes(query);\n  });\n  const filteredAgents = agentDetails.filter(agent => {\n    var _agent$name;\n    return (_agent$name = agent.name) === null || _agent$name === void 0 ? void 0 : _agent$name.toLowerCase().includes(agentSearch.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n      user: user,\n      handleLogout: handleLogout,\n      activeTab: activeTab,\n      setActiveTab: setActiveTab,\n      tabClass: tabClass,\n      refreshCalls: refreshCalls,\n      callSearch: callSearch,\n      setCallSearch: setCallSearch,\n      agentSearch: agentSearch,\n      setAgentSearch: setAgentSearch,\n      fromDate: fromDate,\n      setFromDate: setFromDate,\n      toDate: toDate,\n      setToDate: setToDate,\n      handleDateSearch: handleDateSearch,\n      showCallExport: showCallExport,\n      setShowCallExport: setShowCallExport,\n      showAgentExport: showAgentExport,\n      setShowAgentExport: setShowAgentExport,\n      filteredCalls: filteredCalls,\n      filteredAgents: filteredAgents,\n      exportToExcel: exportToExcel,\n      exportToPDF: exportToPDF,\n      exportToCSV: exportToCSV,\n      exportToXML: exportToXML,\n      setShowAddModal: setShowAddModal,\n      setFormData: setFormData,\n      setError: setError,\n      userRoleIsAdmin: userRoleIsAdmin,\n      editingCallId: editingCallId,\n      editInputs: editInputs,\n      setEditInputs: setEditInputs,\n      handleEditCall: handleEditCall,\n      handleCancelEdit: handleCancelEdit,\n      handleUpdateCall: id => handleUpdateCall(id, token),\n      editLoading: editLoading,\n      formatDuration: formatDuration,\n      callStatusClass: callStatusClass,\n      handleViewCustomerCalls: handleViewCustomerCalls,\n      handleOpenAltNumbersModal: handleOpenAltNumbersModal,\n      callDetails: callDetails,\n      openEditModal: openEditModal,\n      handleDeleteAgent: agentNum => handleDeleteAgent(agentNum, token),\n      deleteLoading: deleteLoading,\n      showAddModal: showAddModal,\n      showEditModal: showEditModal,\n      formData: formData,\n      setShowEditModal: setShowEditModal,\n      handleAddAgent: (data, onSuccess, onError, setLoading) => handleAddAgent(data, token, onSuccess, onError, setLoading),\n      handleEditAgent: (data, onSuccess, onError, setLoading) => handleEditAgent(data, token, onSuccess, onError, setLoading),\n      loading: loading,\n      error: error,\n      manualCallNumber: manualCallNumber,\n      setManualCallNumber: setManualCallNumber,\n      handleManualCall: handleManualCall,\n      isBlocked: !!blockedMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAgentModal, {\n      show: showAddModal,\n      onClose: () => setShowAddModal(false),\n      formData: formData,\n      setFormData: setFormData,\n      handleAddAgent: e => {\n        e.preventDefault();\n        handleAddAgent(formData, token, () => setShowAddModal(false), setError, () => {});\n      },\n      loading: loading,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAgentModal, {\n      show: showEditModal,\n      onClose: () => setShowEditModal(false),\n      formData: formData,\n      setFormData: setFormData,\n      handleEditAgent: e => {\n        e.preventDefault();\n        handleEditAgent(formData, token, () => setShowEditModal(false), setError, () => {});\n      },\n      loading: loading,\n      error: error,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AltNumbersModal, {\n      show: altModal,\n      onClose: () => setAltModal(false),\n      selectedCall: selectedCall,\n      altNumbersInput: altNumbersInput,\n      setAltNumbersInput: setAltNumbersInput,\n      handleSaveAltNumbers: handleSaveAltNumbersWrapper,\n      altNumbersLoading: altNumbersLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ViewAllCallsModal, {\n      show: !!viewCustomer,\n      onClose: () => setViewCustomer(null),\n      viewCustomer: viewCustomer,\n      viewAllRemarksEdit: viewAllRemarksEdit,\n      viewAllRemarksInput: viewAllRemarksInput,\n      setViewAllRemarksInput: setViewAllRemarksInput,\n      handleViewAllRemarksEdit: handleViewAllRemarksEdit,\n      handleSaveViewAllRemarks: handleSaveViewAllRemarksWrapper,\n      viewAllRemarksLoading: viewAllRemarksLoading,\n      setViewAllRemarksEdit: setViewAllRemarksEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"O9JL/T+ubTc8wgnHMV5SvuJQLLM=\", false, function () {\n  return [useAuth, useAgents, useCalls];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Login","Dashboard","AddAgentModal","EditAgentModal","AltNumbersModal","ViewAllCallsModal","useAuth","useAgents","useCalls","exportToExcel","exportToPDF","exportToCSV","exportToXML","formatDuration","callStatusClass","handleSaveAltNumbers","handleSaveViewAllRemarks","fetchCompanyInfo","CompanyBlockedOverlay","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","currentScreen","user","loginData","setLoginData","handleLogin","handleLogout","loading","error","setError","agentDetails","fetchAgentDetails","handleAddAgent","handleEditAgent","handleDeleteAgent","deleteLoading","callDetails","fetchCallDetails","editingCallId","setEditingCallId","editInputs","setEditInputs","editLoading","handleEditCall","handleCancelEdit","handleUpdateCall","activeTab","setActiveTab","callSearch","setCallSearch","agentSearch","setAgentSearch","fromDate","setFromDate","toDate","setToDate","showCallExport","setShowCallExport","showAgentExport","setShowAgentExport","blockedMessage","setBlockedMessage","showAddModal","setShowAddModal","showEditModal","setShowEditModal","formData","setFormData","agent_number","name","email","password","status","is_admin","manualCallNumber","setManualCallNumber","viewCustomer","setViewCustomer","viewAllRemarksEdit","setViewAllRemarksEdit","viewAllRemarksInput","setViewAllRemarksInput","viewAllRemarksLoading","setViewAllRemarksLoading","altModal","setAltModal","selectedCall","setSelectedCall","altNumbersInput","setAltNumbersInput","altNumbersLoading","setAltNumbersLoading","userRoleIsAdmin","token","localStorage","getItem","handleDateSearch","refreshCalls","openEditModal","agent","handleManualCall","alert","handleOpenAltNumbersModal","call","alternative_numbers","handleSaveAltNumbersWrapper","res","id","success","handleViewCustomerCalls","customerNumber","customerCalls","filteredCalls","filter","customer_number","enrichedCustomer","number","calls","sort","a","b","Date","timestamp","handleViewAllRemarksEdit","remarks","customerMostRecentRemark","cleanRemarks","removeTimestampsAndTags","text","replace","trim","customer","_customer$calls","mostRecentCall","handleSaveViewAllRemarksWrapper","_viewCustomer$calls","_viewCustomer$calls$","toLocaleString","newFormattedRemark","oldRemarks","updatedRemarks","callId","updatedCalls","map","prev","tabClass","key","init","role","company","payment_status","msg","console","log","fileName","_jsxFileName","lineNumber","columnNumber","message","onLogout","query","toLowerCase","hasMeeting","Boolean","meeting_datetime","meeting_description","includes","fields","join","filteredAgents","_agent$name","children","agentNum","data","onSuccess","onError","setLoading","isBlocked","show","onClose","e","preventDefault","_c","$RefreshReg$"],"sources":["D:/Projects/Git Clone File/Call-Center-App/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport AddAgentModal from './components/Modals/AddAgentModal';\nimport EditAgentModal from './components/Modals/EditAgentModal';\nimport AltNumbersModal from './components/Modals/AltNumbersModal';\nimport ViewAllCallsModal from './components/Modals/ViewAllCallsModal';\n\nimport useAuth from './hooks/useAuth';\nimport useAgents from './hooks/useAgents';\nimport useCalls from './hooks/useCalls';\n\nimport {\n  exportToExcel,\n  exportToPDF,\n  exportToCSV,\n  exportToXML,\n} from './utils/exportHelpers';\n\nimport { formatDuration, callStatusClass } from './utils/format';\nimport { handleSaveAltNumbers, handleSaveViewAllRemarks, fetchCompanyInfo } from './utils/api';\nimport CompanyBlockedOverlay from './components/CompanyBlockedOverlay';\n\nfunction App() {\n  // Auth\n  const {\n    currentScreen,\n    user,\n    loginData,\n    setLoginData,\n    handleLogin,\n    handleLogout,\n    loading,\n    error,\n    setError,\n  } = useAuth();\n\n  // Agents\n  const {\n    agentDetails,\n    fetchAgentDetails,\n    handleAddAgent,\n    handleEditAgent,\n    handleDeleteAgent,\n    deleteLoading,\n  } = useAgents();\n\n  // Calls\n  const {\n    callDetails,\n    fetchCallDetails,\n    editingCallId,\n    setEditingCallId,\n    editInputs,\n    setEditInputs,\n    editLoading,\n    handleEditCall,\n    handleCancelEdit,\n    handleUpdateCall,\n  } = useCalls();\n\n  // UI States\n  const [activeTab, setActiveTab] = useState('calls');\n  const [callSearch, setCallSearch] = useState('');\n  const [agentSearch, setAgentSearch] = useState('');\n  const [fromDate, setFromDate] = useState('');\n  const [toDate, setToDate] = useState('');\n  const [showCallExport, setShowCallExport] = useState(false);\n  const [showAgentExport, setShowAgentExport] = useState(false);\n  const [blockedMessage, setBlockedMessage] = useState('');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [formData, setFormData] = useState({ agent_number: '', name: '', email: '', password: '', status: 'Active', is_admin: false });\n  const [manualCallNumber, setManualCallNumber] = useState('');\n  const [viewCustomer, setViewCustomer] = useState(null);\n  const [viewAllRemarksEdit, setViewAllRemarksEdit] = useState(false);\n  const [viewAllRemarksInput, setViewAllRemarksInput] = useState('');\n  const [viewAllRemarksLoading, setViewAllRemarksLoading] = useState(false);\n  const [altModal, setAltModal] = useState(false);\n  const [selectedCall, setSelectedCall] = useState(null);\n  const [altNumbersInput, setAltNumbersInput] = useState('');\n  const [altNumbersLoading, setAltNumbersLoading] = useState(false);\n\n  const userRoleIsAdmin = user?.is_admin;\n\n  const token = localStorage.getItem('token');\n\n  const handleDateSearch = () => {\n    fetchCallDetails(token, fromDate, toDate);\n  };\n\n  const refreshCalls = () => {\n    fetchCallDetails(token, fromDate, toDate);\n  };\n\n  const openEditModal = (agent) => {\n    setFormData(agent);\n    setShowEditModal(true);\n  };\n\n  const handleManualCall = () => {\n    if (!manualCallNumber) return alert(\"Enter a number\");\n    alert(`Pretend calling ${manualCallNumber}`);\n  };\n\n  const handleOpenAltNumbersModal = (call) => {\n    setSelectedCall(call);\n    setAltNumbersInput(call.alternative_numbers || '');\n    setAltModal(true);\n  };\n\n  const handleSaveAltNumbersWrapper = async () => {\n    setAltNumbersLoading(true);\n    const res = await handleSaveAltNumbers(selectedCall.id, altNumbersInput, token);\n    if (res.success) {\n      await fetchCallDetails(token, fromDate, toDate);\n      setAltModal(false);\n    }\n    setAltNumbersLoading(false);\n  };\n\n  const handleViewCustomerCalls = (customerNumber) => {\n    const customerCalls = filteredCalls.filter(call => call.customer_number === customerNumber);\n  \n    const enrichedCustomer = {\n      number: customerNumber,\n      calls: customerCalls.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)), // latest first\n    };\n  \n    setViewCustomer(enrichedCustomer);\n    setViewAllRemarksEdit(false);\n    setViewAllRemarksInput('');\n  };\n  \n  \n  const handleViewAllRemarksEdit = () => {\n    const remarks = customerMostRecentRemark(viewCustomer);\n    const cleanRemarks = removeTimestampsAndTags('');\n    setViewAllRemarksInput(cleanRemarks);\n    setViewAllRemarksEdit(true);\n  };\n  \n  const removeTimestampsAndTags = (text) => {\n    return text\n      .replace(/<[^>]*>/g, '') // remove HTML tags\n      .replace(/\\[\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}:\\d{2}\\]/g, '') // remove [DD/MM/YYYY HH:MM:SS]\n      .trim();\n  };\n  \n  \n  const customerMostRecentRemark = (customer) => {\n    const mostRecentCall = customer?.calls?.[0];\n    return mostRecentCall?.remarks || '';\n  };\n\n  const handleSaveViewAllRemarksWrapper = async () => {\n    if (!viewCustomer?.calls?.[0]) return;\n  \n    setViewAllRemarksLoading(true);\n  \n    const timestamp = new Date().toLocaleString('en-GB'); // dd/mm/yyyy hh:mm:ss\n    const newFormattedRemark = `${viewAllRemarksInput.trim()} <span style='font-size:10px;color:gray;'>[${timestamp}]</span>`;\n    const oldRemarks = viewCustomer.calls[0]?.remarks || '';\n    const updatedRemarks = `${newFormattedRemark}<br/>${oldRemarks}`;\n  \n    const callId = viewCustomer.calls[0].id;\n  \n    const res = await handleSaveViewAllRemarks(callId, { remarks: updatedRemarks }, token);\n  \n    if (res.success) {\n      // ✅ Update locally — so UI shows updated immediately\n      const updatedCalls = viewCustomer.calls.map(call =>\n        call.id === callId ? { ...call, remarks: updatedRemarks } : call\n      );\n  \n      setViewCustomer(prev => ({\n        ...prev,\n        calls: updatedCalls,\n      }));\n  \n      setViewAllRemarksEdit(false);\n      setViewAllRemarksInput('');\n    }\n  \n    setViewAllRemarksLoading(false);\n  };\n  \n  \n  \n\n  const tabClass = (key) =>\n    `py-3 px-4 text-sm font-medium border-b-2 ${\n      activeTab === key\n        ? 'border-blue-500 text-blue-600'\n        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n    }`;\n\n  useEffect(() => {\n    const init = async () => {\n      if (!user || !token) return;\n      // Route master to companies tab by default\n      if (user.role === 'master') {\n        setActiveTab('companies');\n        return; // no company gating for master\n      }\n      // For admin/agent, fetch company status and gate UI\n      const company = await fetchCompanyInfo(token);\n      if (company && (company.status === 'Fully Close' || company.status === 'Partially Close' || company.payment_status === 'Unpaid')) {\n        const msg = 'Your services are stopped. Please contact the sales person.';\n        setBlockedMessage(msg);\n        console.log('Company is blocked, blockedMessage set to:', msg, 'Company status:', company.status, 'Payment status:', company.payment_status);\n        return; // do not fetch data\n      }\n      setBlockedMessage('');\n      console.log('Company is NOT blocked, blockedMessage set to empty.', 'Company status:', company?.status, 'Payment status:', company?.payment_status);\n      fetchCallDetails(token);\n      fetchAgentDetails(token);\n    };\n    init();\n  }, [user]);\n\n  if (currentScreen === 'login') {\n    return (\n      <Login\n        loginData={loginData}\n        setLoginData={setLoginData}\n        handleLogin={handleLogin}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n\n  if (blockedMessage) {\n    return (\n      <CompanyBlockedOverlay message={blockedMessage} onLogout={handleLogout} user={user} />\n    );\n  }\n\n  const filteredCalls = callDetails.filter((call) => {\n    const query = (callSearch || '').trim().toLowerCase();\n    if (!query) return true;\n\n    const hasMeeting = Boolean(call.meeting_datetime || (call.meeting_description && call.meeting_description.trim()));\n    // If the user searches for 'meeting' (or similar), only show calls that have meeting info\n    if (['meeting', 'meetings', 'meet'].includes(query)) {\n      return hasMeeting;\n    }\n\n    const fields = [\n      call.customer_number || '',\n      call.agent_number || '',\n      (call.name || '').replace(/<[^>]*>/g, ''),\n      (call.remarks || '').replace(/<[^>]*>/g, ''),\n      call.meeting_description || '',\n      call.meeting_datetime ? new Date(call.meeting_datetime).toLocaleString() : ''\n    ];\n    return fields.join(' ').toLowerCase().includes(query);\n  });\n\n  const filteredAgents = agentDetails.filter((agent) =>\n    agent.name?.toLowerCase().includes(agentSearch.toLowerCase())\n  );\n\n  return (\n    <>\n      <Dashboard\n        user={user}\n        handleLogout={handleLogout}\n        activeTab={activeTab}\n        setActiveTab={setActiveTab}\n        tabClass={tabClass}\n        refreshCalls={refreshCalls}\n        callSearch={callSearch}\n        setCallSearch={setCallSearch}\n        agentSearch={agentSearch}\n        setAgentSearch={setAgentSearch}\n        fromDate={fromDate}\n        setFromDate={setFromDate}\n        toDate={toDate}\n        setToDate={setToDate}\n        handleDateSearch={handleDateSearch}\n        showCallExport={showCallExport}\n        setShowCallExport={setShowCallExport}\n        showAgentExport={showAgentExport}\n        setShowAgentExport={setShowAgentExport}\n        filteredCalls={filteredCalls}\n        filteredAgents={filteredAgents}\n        exportToExcel={exportToExcel}\n        exportToPDF={exportToPDF}\n        exportToCSV={exportToCSV}\n        exportToXML={exportToXML}\n        setShowAddModal={setShowAddModal}\n        setFormData={setFormData}\n        setError={setError}\n        userRoleIsAdmin={userRoleIsAdmin}\n        editingCallId={editingCallId}\n        editInputs={editInputs}\n        setEditInputs={setEditInputs}\n        handleEditCall={handleEditCall}\n        handleCancelEdit={handleCancelEdit}\n        handleUpdateCall={(id) => handleUpdateCall(id, token)}\n        editLoading={editLoading}\n        formatDuration={formatDuration}\n        callStatusClass={callStatusClass}\n        handleViewCustomerCalls={handleViewCustomerCalls}\n        handleOpenAltNumbersModal={handleOpenAltNumbersModal}\n        callDetails={callDetails}\n        openEditModal={openEditModal}\n        handleDeleteAgent={(agentNum) => handleDeleteAgent(agentNum, token)}\n        deleteLoading={deleteLoading}\n        showAddModal={showAddModal}\n        showEditModal={showEditModal}\n        formData={formData}\n        setShowEditModal={setShowEditModal}\n        handleAddAgent={(data, onSuccess, onError, setLoading) =>\n          handleAddAgent(data, token, onSuccess, onError, setLoading)\n        }\n        handleEditAgent={(data, onSuccess, onError, setLoading) =>\n          handleEditAgent(data, token, onSuccess, onError, setLoading)\n        }\n        loading={loading}\n        error={error}\n        manualCallNumber={manualCallNumber}\n        setManualCallNumber={setManualCallNumber}\n        handleManualCall={handleManualCall}\n        isBlocked={!!blockedMessage}\n      />\n\n      <AddAgentModal\n        show={showAddModal}\n        onClose={() => setShowAddModal(false)}\n        formData={formData}\n        setFormData={setFormData}\n        handleAddAgent={(e) => {\n          e.preventDefault();\n          handleAddAgent(formData, token, () => setShowAddModal(false), setError, () => {});\n        }}\n        loading={loading}\n        error={error}\n      />\n\n      <EditAgentModal\n        show={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        formData={formData}\n        setFormData={setFormData}\n        handleEditAgent={(e) => {\n          e.preventDefault();\n          handleEditAgent(formData, token, () => setShowEditModal(false), setError, () => {});\n        }}\n        loading={loading}\n        error={error}\n        user={user}\n      />\n\n      <AltNumbersModal\n        show={altModal}\n        onClose={() => setAltModal(false)}\n        selectedCall={selectedCall}\n        altNumbersInput={altNumbersInput}\n        setAltNumbersInput={setAltNumbersInput}\n        handleSaveAltNumbers={handleSaveAltNumbersWrapper}\n        altNumbersLoading={altNumbersLoading}\n      />\n\n      <ViewAllCallsModal\n        show={!!viewCustomer}\n        onClose={() => setViewCustomer(null)}\n        viewCustomer={viewCustomer}\n        viewAllRemarksEdit={viewAllRemarksEdit}\n        viewAllRemarksInput={viewAllRemarksInput}\n        setViewAllRemarksInput={setViewAllRemarksInput}\n        handleViewAllRemarksEdit={handleViewAllRemarksEdit}\n        handleSaveViewAllRemarks={handleSaveViewAllRemarksWrapper}\n        viewAllRemarksLoading={viewAllRemarksLoading}\n        setViewAllRemarksEdit={setViewAllRemarksEdit}\n      />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}