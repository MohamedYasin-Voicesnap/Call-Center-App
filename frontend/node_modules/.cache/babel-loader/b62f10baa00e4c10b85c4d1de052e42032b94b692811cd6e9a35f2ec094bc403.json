{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { handleLogin as apiHandleLogin } from '../utils/api';\nexport default function useAuth() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loginData, setLoginData] = useState({\n    userId: '',\n    password: '',\n    loginType: 'admin_or_agent'\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // ✅ Restore login state on app load\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        // setCurrentScreen('dashboard'); // This is a problem, will address in App.js\n      } catch (err) {\n        console.error('Invalid user data in localStorage');\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    const result = await apiHandleLogin(loginData);\n    if (result.success) {\n      setUser(result.data.user);\n      localStorage.setItem('token', result.data.token);\n      localStorage.setItem('user', JSON.stringify(result.data.user));\n      // setCurrentScreen('dashboard'); // This is a problem, will address in App.js\n    } else {\n      setError(result.message);\n    }\n    setLoading(false);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    // setCurrentScreen('login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setLoginData({\n      userId: '',\n      password: ''\n    });\n  };\n  return {\n    user,\n    setUser,\n    loginData,\n    setLoginData,\n    handleLogin,\n    handleLogout,\n    loading,\n    error,\n    setError\n  };\n}\n_s(useAuth, \"uqVIwVO/ADqtTGxAIhFRqiknrYw=\");","map":{"version":3,"names":["useState","useEffect","handleLogin","apiHandleLogin","useAuth","_s","user","setUser","loginData","setLoginData","userId","password","loginType","loading","setLoading","error","setError","storedToken","localStorage","getItem","storedUser","parsedUser","JSON","parse","err","console","removeItem","e","preventDefault","result","success","data","setItem","token","stringify","message","handleLogout"],"sources":["D:/Projects/Git Clone File/Call-Center-App/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { handleLogin as apiHandleLogin } from '../utils/api';\n\nexport default function useAuth() {\n  const [user, setUser] = useState(null);\n  const [loginData, setLoginData] = useState({ userId: '', password: '', loginType: 'admin_or_agent' });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // ✅ Restore login state on app load\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n\n    if (storedToken && storedUser) {\n      try {\n        const parsedUser = JSON.parse(storedUser);\n        setUser(parsedUser);\n        // setCurrentScreen('dashboard'); // This is a problem, will address in App.js\n      } catch (err) {\n        console.error('Invalid user data in localStorage');\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n      }\n    }\n  }, []);\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    const result = await apiHandleLogin(loginData);\n\n    if (result.success) {\n      setUser(result.data.user);\n      localStorage.setItem('token', result.data.token);\n      localStorage.setItem('user', JSON.stringify(result.data.user));\n      // setCurrentScreen('dashboard'); // This is a problem, will address in App.js\n    } else {\n      setError(result.message);\n    }\n\n    setLoading(false);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    // setCurrentScreen('login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setLoginData({ userId: '', password: '' });\n  };\n\n  return {\n    user,\n    setUser,\n    loginData,\n    setLoginData,\n    handleLogin,\n    handleLogout,\n    loading,\n    error,\n    setError\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,IAAIC,cAAc,QAAQ,cAAc;AAE5D,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC;IAAEU,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,CAAC;EACrG,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,WAAW,IAAIG,UAAU,EAAE;MAC7B,IAAI;QACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC;QACzCb,OAAO,CAACc,UAAU,CAAC;QACnB;MACF,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZC,OAAO,CAACV,KAAK,CAAC,mCAAmC,CAAC;QAClDG,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;QAC/BR,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAClC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMxB,WAAW,GAAG,MAAOyB,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBd,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMa,MAAM,GAAG,MAAM1B,cAAc,CAACK,SAAS,CAAC;IAE9C,IAAIqB,MAAM,CAACC,OAAO,EAAE;MAClBvB,OAAO,CAACsB,MAAM,CAACE,IAAI,CAACzB,IAAI,CAAC;MACzBY,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACE,IAAI,CAACE,KAAK,CAAC;MAChDf,YAAY,CAACc,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACY,SAAS,CAACL,MAAM,CAACE,IAAI,CAACzB,IAAI,CAAC,CAAC;MAC9D;IACF,CAAC,MAAM;MACLU,QAAQ,CAACa,MAAM,CAACM,OAAO,CAAC;IAC1B;IAEArB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMsB,YAAY,GAAGA,CAAA,KAAM;IACzB7B,OAAO,CAAC,IAAI,CAAC;IACb;IACAW,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BjB,YAAY,CAAC;MAAEC,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC5C,CAAC;EAED,OAAO;IACLL,IAAI;IACJC,OAAO;IACPC,SAAS;IACTC,YAAY;IACZP,WAAW;IACXkC,YAAY;IACZvB,OAAO;IACPE,KAAK;IACLC;EACF,CAAC;AACH;AAACX,EAAA,CA9DuBD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}